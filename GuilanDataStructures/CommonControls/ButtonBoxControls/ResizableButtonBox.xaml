<UserControl
    x:Class="GuilanDataStructures.CommonControls.ButtonBoxControls.ResizableButtonBox"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:GuilanDataStructures.CommonControls.ButtonBoxControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    x:Name="control"
    d:DesignHeight="300"
    d:DesignWidth="400"
    FontFamily="{StaticResource Sahel}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <local:HeighDecreaser x:Key="converter" />
        <RadialGradientBrush x:Key="brushGrad">
            <GradientStop Offset="1" Color="#FF7AE573" />
            <GradientStop Offset="0" Color="#FF8BFF84" />
        </RadialGradientBrush>
        <ControlTemplate x:Key="MazeButtonTemplate" TargetType="{x:Type local:MazeButton}">
            <Border
                x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="0"
                SnapsToDevicePixels="True">
                <ContentPresenter
                    x:Name="contentPresenter"
                    Margin="{TemplateBinding Padding}"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Content="{TemplateBinding Content}"
                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                    ContentTemplate="{TemplateBinding ContentTemplate}"
                    Focusable="False"
                    RecognizesAccessKey="True"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#FF96D7FD" />
                    <Setter TargetName="border" Property="BorderBrush" Value="#FF3C7FB1" />
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#FF3DB7F6" />
                    <Setter TargetName="border" Property="BorderBrush" Value="#FF2C628B" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter TargetName="border" Property="Background" Value="#FFBCDDEE" />
                    <Setter TargetName="border" Property="BorderBrush" Value="#FF245A83" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter TargetName="border" Property="Background" Value="#FFF4F4F4" />
                    <Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="#FF838383" />
                </Trigger>
                <Trigger Property="IsBlock" Value="True">
                    <Setter TargetName="border" Property="Background">
                        <Setter.Value>
                            <VisualBrush
                                TileMode="Tile"
                                Viewbox="0,0,15,15"
                                ViewboxUnits="Absolute"
                                Viewport="0,0,15,15"
                                ViewportUnits="Absolute">
                                <VisualBrush.Visual>
                                    <Grid Background="#FF6C6C6C">
                                        <Path Data="M 0 15 L 15 0" Stroke="Gray" />
                                        <Path Data="M 0 0 L 15 15" Stroke="Gray" />
                                    </Grid>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Setter.Value>
                    </Setter>
                    <!--<Setter Property="Background" TargetName="border" Value="#FF6C6C6C"/>-->
                </Trigger>
                <Trigger Property="IsStartPoint" Value="True">
                    <Setter TargetName="border" Property="BorderThickness" Value="1" />
                    <Setter TargetName="border" Property="BorderBrush" Value="#FF94A4FF" />

                    <Setter TargetName="border" Property="Background">
                        <Setter.Value>
                            <RadialGradientBrush>
                                <GradientStop Offset="1" Color="#FF4DA4DD" />
                                <GradientStop Offset="0" Color="White" />
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEndPoint" Value="True">
                    <Setter TargetName="border" Property="BorderThickness" Value="1" />
                    <Setter TargetName="border" Property="BorderBrush" Value="#FFFFAEAE" />
                    <Setter TargetName="border" Property="Background">
                        <Setter.Value>
                            <RadialGradientBrush>
                                <GradientStop Offset="1" Color="#FFFC8C80" />
                                <GradientStop Offset="0" Color="White" />
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>

            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type local:MazeButton}">
            <Setter Property="Template" Value="{StaticResource MazeButtonTemplate}" />
        </Style>
    </UserControl.Resources>

    <Canvas
        x:Name="canvas"
        Width="302"
        Height="100">
        <Rectangle
            x:Name="rect"
            Width="{Binding ElementName=canvas, Path=ActualWidth}"
            Height="{Binding ElementName=canvas, Path=ActualHeight}"
            Stroke="Blue"
            StrokeDashArray="4 4"
            StrokeThickness="1" />

        <WrapPanel
            x:Name="mainArea"
            Canvas.Left="1"
            Canvas.Top="1"
            Width="{Binding ElementName=canvas, Path=ActualWidth, Converter={StaticResource converter}}"
            Height="{Binding ElementName=canvas, Path=ActualHeight, Converter={StaticResource converter}}"
            Background="LightBlue"
            Orientation="Horizontal"
            SizeChanged="mainArea_SizeChanged" />
        <Thumb
            Canvas.Right="0"
            Canvas.Bottom="0"
            Width="8"
            Height="8"
            Background="Transparent"
            Cursor="SizeNWSE"
            DragCompleted="Thumb_DragCompleted"
            DragDelta="Thumb_DragDelta"
            DragOver="Thumb_DragOver"
            DragStarted="Thumb_DragStarted" />

        <TextBlock
            x:Name="areaText"
            Canvas.Left="26"
            Canvas.Top="40"
            Foreground="DodgerBlue">
            Resize the playground using the corner thumb.
        </TextBlock>

    </Canvas>

</UserControl>
