<UserControl x:Class="GuilanDataStructures.CommonControls.ButtonBoxControls.ResizableButtonBox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:GuilanDataStructures.CommonControls.ButtonBoxControls"
             mc:Ignorable="d" x:Name="control" FontFamily="{StaticResource Sahel}"
             d:DesignHeight="300" d:DesignWidth="400" >
    <UserControl.Resources>
        <local:HeighDecreaser x:Key="converter" />
        <RadialGradientBrush x:Key="brushGrad">
            <GradientStop Color="#FF7AE573" Offset="1"/>
            <GradientStop Color="#FF8BFF84" Offset="0"/>
        </RadialGradientBrush>
        <ControlTemplate x:Key="MazeButtonTemplate" TargetType="{x:Type local:MazeButton}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="Button.IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF96D7FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FF3DB7F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                </Trigger>
                <Trigger Property="IsBlock" Value="True">
                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <VisualBrush TileMode="Tile" Viewport="0,0,15,15" ViewportUnits="Absolute" Viewbox="0,0,15,15" ViewboxUnits="Absolute">
                                <VisualBrush.Visual>
                                    <Grid Background="#FF6C6C6C">
                                        <Path Data="M 0 15 L 15 0" Stroke="Gray" />
                                        <Path Data="M 0 0 L 15 15" Stroke="Gray" />
                                    </Grid>
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Setter.Value>
                    </Setter>
                    <!--<Setter Property="Background" TargetName="border" Value="#FF6C6C6C"/>-->
                </Trigger>
                <Trigger Property="IsStartPoint" Value="True">
                    <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF94A4FF"/>

                    <Setter Property="Background" TargetName="border">
                        <Setter.Value>
                            <RadialGradientBrush>
                                <GradientStop Color="#FF4DA4DD" Offset="1"/>
                                <GradientStop Color="White" Offset="0"/>
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                <Trigger Property="IsEndPoint" Value="True">
                    <Setter Property="BorderThickness" TargetName="border" Value="1"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFFFAEAE"/>
                    <Setter Property="Background" TargetName="border" >
                        <Setter.Value>
                            <RadialGradientBrush>
                                <GradientStop Color="#FFFC8C80" Offset="1"/>
                                <GradientStop Color="White" Offset="0"/>
                            </RadialGradientBrush>
                        </Setter.Value>
                    </Setter>
                </Trigger>
                
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style TargetType="{x:Type local:MazeButton}">
            <Setter Property="Template" Value="{StaticResource MazeButtonTemplate}" />
        </Style>
    </UserControl.Resources>

    <Canvas x:Name="canvas" Width="302" Height="100">
        <Rectangle x:Name="rect"  Stroke="Blue" StrokeDashArray="4 4" StrokeThickness="1" Width="{Binding ElementName=canvas,Path=ActualWidth}"
               Height="{Binding ElementName=canvas,Path=ActualHeight}"/>

        <WrapPanel Orientation="Horizontal" Canvas.Left="1" Canvas.Top="1" Width="{Binding ElementName=canvas,Path=ActualWidth,Converter={StaticResource converter}}"
               Height="{Binding ElementName=canvas,Path=ActualHeight,Converter={StaticResource converter}}" Background="LightBlue"
               x:Name="mainArea" SizeChanged="mainArea_SizeChanged">
        </WrapPanel>
        <Thumb Background="Transparent" Cursor="SizeNWSE" DragOver="Thumb_DragOver" DragStarted="Thumb_DragStarted" DragCompleted="Thumb_DragCompleted" DragDelta="Thumb_DragDelta" Width="8" Height="8" Canvas.Bottom="0" Canvas.Right="0"  />

        <TextBlock Canvas.Left="40" Canvas.Top="40" FlowDirection="RightToLeft" Foreground="DodgerBlue" x:Name="areaText">اندازه خانه های جدول را با اهرم گوشه تنظیم کنید</TextBlock>
        

    </Canvas>

</UserControl>
